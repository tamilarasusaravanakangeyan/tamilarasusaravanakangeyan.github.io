name: Build and Deploy Hugo Site

on:
    push:
        branches: [main, master]
    pull_request:
        branches: [main, master]
    workflow_dispatch:

# Allow only one concurrent deployment
concurrency:
    group: "pages"
    cancel-in-progress: false

# Default to bash
defaults:
    run:
        shell: bash

jobs:
    # Build job
    build:
        runs-on: ubuntu-latest
        env:
            HUGO_VERSION: 0.120.4
        steps:
            - name: Install Hugo CLI
              run: |
                  wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
                  && sudo dpkg -i ${{ runner.temp }}/hugo.deb

            - name: Install Dart Sass
              run: sudo snap install dart-sass

            - name: Checkout
              uses: actions/checkout@v4
              with:
                  submodules: recursive
                  fetch-depth: 0

            - name: Setup Pages
              id: pages
              uses: actions/configure-pages@v4

            - name: Install Node.js dependencies
              run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

            - name: Build with Hugo
              env:
                  # For maximum backward compatibility with Hugo modules
                  HUGO_ENVIRONMENT: production
                  HUGO_ENV: production
              run: |
                  hugo \
                    --gc \
                    --minify \
                    --baseURL "${{ steps.pages.outputs.base_url }}/"

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v2
              with:
                  path: ./public

    # Deployment job
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: build
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

        # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
        permissions:
            contents: read
            pages: write
            id-token: write

        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v3

    # Lighthouse CI job
    lighthouse:
        runs-on: ubuntu-latest
        needs: deploy
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"

            - name: Install Lighthouse CI
              run: npm install -g @lhci/cli@0.12.x

            - name: Run Lighthouse CI
              run: |
                  lhci autorun \
                    --upload.target=temporary-public-storage \
                    --collect.url="${{ needs.deploy.outputs.page_url }}" \
                    --collect.numberOfRuns=3 \
                    --assert.preset=lighthouse:recommended
              env:
                  LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

    # Security and quality checks
    security-scan:
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  scan-type: "fs"
                  scan-ref: "."
                  format: "sarif"
                  output: "trivy-results.sarif"

            - name: Upload Trivy scan results to GitHub Security tab
              uses: github/codeql-action/upload-sarif@v2
              if: always()
              with:
                  sarif_file: "trivy-results.sarif"

            - name: Markdown Link Check
              uses: gaurav-nelson/github-action-markdown-link-check@v1
              with:
                  config-file: ".github/workflows/mlc_config.json"
                  folder-path: "content"
                  max-depth: 3
